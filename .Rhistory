install.packages("devtools")
library(devtools)
install_github("genomicsclass/dagdata")
install_github("ririzarr/rafalib")
x <- 1:10
x <- 1:10
plot(x,y)
y <- 1:10
x
y
plot(x,y)
library("mapdata", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("maptools", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("ggmap", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("dismo", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("rgdal", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("rJava", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
theta=c(0:100)
prob=((27*theta^3)/4)/((((3*theta/2)+3)^3)*((theta+1)^2)*2) + ((9*theta^3)/2)/((((3*theta/2)+3)^2)*((theta+1)^3)*2)
plot(theta,prob)
max(prob)
prob
theta=seq(0,100,0.5)
prob=((27*theta^3)/4)/((((3*theta/2)+3)^3)*((theta+1)^2)*2) + ((9*theta^3)/2)/((((3*theta/2)+3)^2)*((theta+1)^3)*2)
plot(theta,prob)
match(max(prob),prob)
prob[[match(max(prob),prob)]]
prob
match(max(prob),prob))/0.5
match(max(prob),prob)/0.5
match(max(prob),prob)
match(max(prob),prob)/2
(match(max(prob),prob)/2)-0.5
theta=seq(0,40,0.25)
prob=((27*theta^3)/4)/((((3*theta/2)+3)^3)*((theta+1)^2)*2) + ((9*theta^3)/2)/((((3*theta/2)+3)^2)*((theta+1)^3)*2)
plot(theta,prob)
(match(max(prob),prob)/4)-0.25
abline(lm(prob~theta), col="red")
abline(lowess(theta,prob), col="red")
theta=seq(0,40,0.25)
prob=((27*theta^3)/4)/((((3*theta/2)+3)^3)*((theta+1)^2)*2) + ((9*theta^3)/2)/((((3*theta/2)+3)^2)*((theta+1)^3)*2)
plot(theta,prob)
(match(max(prob),prob)/4)-0.25
abline(lowess(theta,prob), col="red")
loess_fit <- loess(prob ~ theta)
lines(theta, predict(loess_fit), col = "blue")
prob
data=data.frame(theta=theta,prob=prob)
library(ggplot2)
ggplot(data,aes(theta,prob))+geom_point()+geom_smooth()
?stat_smooth
ggplot(data,aes(theta,prob))+geom_point()+geom_smooth(formula=y ~ poly(x, 2))
ggplot(data,aes(theta,prob))+geom_point()+geom_smooth(method=glmformula=y ~ poly(x, 2))
ggplot(data,aes(theta,prob))+geom_point()+geom_smooth(method=glm,formula=y ~ poly(x, 2))
ggplot(data,aes(theta,prob))+geom_point()+geom_smooth(method=rlm,formula=y ~ poly(x, 2))
ggplot(data,aes(theta,prob))+geom_point()+geom_smooth(method=rlm,formula=y ~ poly(x, 2))
ggplot(data,aes(theta,prob))+geom_point()+geom_smooth(method=lm,formula=y ~ poly(x, 2))
ggplot(data,aes(theta,prob))+geom_point()+geom_smooth(method=loess,formula=y ~ poly(x, 2))
ggplot(data,aes(theta,prob))+geom_point()+geom_smooth(method=loess,formula=y ~ poly(x, 1))
ggplot(data,aes(theta,prob))+geom_point()+geom_smooth(method=loess,formula=y ~ poly(x, 3))
ggplot(data,aes(theta,prob))+geom_point()+geom_smooth(method=loess,formula=y ~ poly(x, 2))
ggplot(data,aes(theta,prob))+geom_point()+geom_smooth(geom_path(),method=loess,formula=y ~ poly(x, 2))
ggplot(data,aes(theta,prob))+geom_point()+geom_smooth(geom_path,method=loess,formula=y ~ poly(x, 2))
ggplot(data,aes(theta,prob))+geom_point()+geom_smooth(method=gam,formula=y ~ poly(x, 2))
ggplot(data,aes(theta,prob))+geom_point()+geom_smooth(formula=y ~ poly(x, 2))
ggplot(data,aes(theta,prob))+geom_point()
theta=seq(0,100,0.25)
prob=((27*theta^3)/4)/((((3*theta/2)+3)^3)*((theta+1)^2)*2) + ((9*theta^3)/2)/((((3*theta/2)+3)^2)*((theta+1)^3)*2)
plot(theta,prob)
(match(max(prob),prob)/4)-0.25
data=data.frame(theta=theta,prob=prob)
library(ggplot2)
ggplot(data,aes(theta,prob))+geom_point()
library(ggplot2,sp,raster,maps,mapdata,maptools,ggmap,rgeos)
install.packages("ggmap")
install.packages("raster")
install.packages("maps")
install.packages("mapdata")
install.packages("maptools")
install.packages("rgeos")
library(ggplot2,sp,raster,maps,mapdata,maptools,ggmap,rgeos)
library("maps", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("ggplot2","sp","raster","maps","mapdata","maptools","ggmap","rgeos")
myData = data.frame(name=c("Florida","Colorado","california","Harvard","Yellowstone"),
lat=c(28.1,39,37,42,44.6),
long=c(-81.6,-105.5,-120,-71,-110),
pop=c(280,156,128,118,202))
library("ggplot2")
library("sp")
library("raster")
library("mapdata")
library("ggmap")
library("rgeos")
library("maps")
library("maptools")
myData
library("map")
map_data
qmap(location="boston")
qmap(location="boston, massachusetts")
qmap(location="boston university")
get_map(location="boston university")
map=get_map(location="boston")
map
?ggmap
map=get_map(location="boston", zoom=10)
map
ggmap(map)
map=get_map(location="boston", zoom=13)
ggmap(get_map(location="boston", zoom=13))
ggmap(get_map(location="boston", zoom=13), extent="normal")
install.packages(c("BH", "boot", "chron", "class", "cluster", "coda", "codetools", "curl", "data.table", "dendextend", "dendextendRcpp", "dendsort", "devtools", "evaluate", "evobiR", "foreign", "geosphere", "ggdendro", "git2r", "httr", "jsonlite", "KernSmooth", "lattice", "manipulate", "mapproj", "MASS", "Matrix", "mgcv", "mime", "nlme", "nnet", "plyr", "R6", "rafalib", "Rcpp", "RcppEigen", "RCurl", "rJava", "roxygen2", "rpart", "rstudioapi", "runjags", "rversions", "spatial", "stringr", "survival", "xml2"))
sessionInfo(0)
sessionInfo()
library("ggplot2")
library("sp")
library("raster")
library("mapdata")
library("ggmap")
library("rgeos")
library("maps")
library("maptools")
ggmap(get_map(location="boston", zoom=13), extent="normal")
install.packages("rgdal")
?install.packages
install.packages("rgdal", configure.args = "with-gdal-config=/Library/Frameworks/GDAL.framework/Versions/Current/Programs/gdal-config")
install.packages("rgdal", configure.args = "--with-gdal-config=/Library/Frameworks/GDAL.framework/Versions/Current/Programs/gdal-config")
install.packages("rgdal", configure.args = c("--with-gdal-config=/Library/Frameworks/GDAL.framework/Versions/Current/Programs/gdal-config", "--with-proj_api.h=/Library/Frameworks/PROJ.framework/Versions/Current/Headers/proj_api.h")
)
install.packages("rgdal", configure.args = c("--with-gdal-config=/Library/Frameworks/GDAL.framework/Versions/Current/Programs/gdal-config", "--with-proj_api=/Library/Frameworks/PROJ.framework/Versions/Current/Headers/proj_api.h"))
install.packages("rgdal", configure.args = c("--with-gdal-config=/Library/Frameworks/GDAL.framework/Versions/Current/Programs/gdal-config", "--with-proj-include=/Library/Frameworks/PROJ.framework/Versions/Current/unix/include"))
install.packages("rgdal", configure.args = c("--with-gdal-config=/Library/Frameworks/GDAL.framework/Versions/Current/Programs/gdal-config", "--with-proj=/Library/Frameworks/PROJ.framework/Versions/Current/unix"))
install.packages("rgdal", configure.args = c("--with-gdal-config=/Library/Frameworks/GDAL.framework/Versions/Current/Programs/gdal-config", "--with-proj-include=/Library/Frameworks/PROJ.framework/Versions/Current/unix/include", "--with-proj-lib=/Library/Frameworks/PROJ.framework/Versions/Current/unix/lib"))
install.packages("OpenStreetMap")
library("OpenStreetMap")
map = openmap(c(lat= 38.05025395161289,   lon= -123.03314208984375),
c(lat= 36.36822190085111,   lon= -120.69580078125),
minNumTiles=9,type=nm["mapbox"])
plot(map)
map = openmap(c(lat= 38.05025395161289,   lon= -123.03314208984375),
c(lat= 36.36822190085111,   lon= -120.69580078125),
minNumTiles=9,type=nm["mapbox"])
map = openmap(c(lat= 38.05025395161289,   lon= -123.03314208984375),
c(lat= 36.36822190085111,   lon= -120.69580078125),
minNumTiles=9,type="mapbox")
plot(map)
?openmap
options(help_type="text")
?options
?mean
options(help_type="html")
?options
getOption(help_type)
options()
setwd("~/Documents/Mallet_Lab/18Genomes/Genomic_Analysis/ReOrderChroms/ScaffoldingWithDiscovar")
envelopers=read.csv("envelopedLengths.csv")
hist(envelopers)
View(envelopers)
envelopers=read.csv("envelopedLengths.csv", header=FALSE)
View(envelopers)
envelopers=read.csv("envelopedLengths.csv", header=FALSE, col.names = "enveloped_sizes")
hist(envelopers$enveloped_sizes)
hist(envelopers$enveloped_sizes, breaks = 100)
hist(envelopers$enveloped_sizes, breaks = 100, main="size frequency of enveloped scaffolds")
hist(envelopers$enveloped_sizes, breaks = 100, main="size frequency of enveloped scaffolds", xlab = "size")
sum(envelopers$enveloped_sizes)
library(ggplot2)
ggplot(data=envelopers aes(enveloped_sizes))+geom_hist()
ggplot(data=envelopers, aes(enveloped_sizes))+geom_hist()
?ggplot_hist
?hist
ggplot(data=envelopers, aes(enveloped_sizes))+geom_histogram()
ggplot(data=envelopers, aes(enveloped_sizes))+geom_histogram()+stat_bin(50)
ggplot(data=envelopers, aes(enveloped_sizes))+geom_histogram(stat_bin(50))
ggplot(data=envelopers, aes(enveloped_sizes))+geom_histogram(aes(stat_bin(50)))
?geom_histogram
ggplot(data=envelopers, aes(enveloped_sizes))+geom_histogram()+stat_bin(bins=50)
ggplot(data=envelopers, aes(enveloped_sizes))+geom_histogram(binwidth = 50)
ggplot(data=envelopers, aes(enveloped_sizes))+geom_histogram(binwidth = 500)
ggplot(data=envelopers, aes(enveloped_sizes))+geom_histogram(binwidth = 5000)
ggplot(data=envelopers, aes(enveloped_sizes))+
geom_histogram(binwidth = 5000)+
scale_y_log10()
ggplot(data=envelopers, aes(enveloped_sizes))+
geom_histogram(binwidth = 5000)+
scale_x_log10()
?scale_x_log10
ggplot(data=envelopers, aes(enveloped_sizes))+
geom_histogram(binwidth = 5000)+
scale_x_log10( limits=c(0,1000000))
ggplot(data=envelopers, aes(enveloped_sizes))+
geom_histogram(binwidth = 5000)+
scale_x_log10()
ggplot(data=envelopers, aes(enveloped_sizes))+
geom_histogram(binwidth = 5000)
mode(envelopers$enveloped_sizes)
median(envelopers$enveloped_sizes)
?scale_x_continuous
ggplot(data=envelopers, aes(enveloped_sizes))+
geom_histogram(binwidth = 5000)+
scale_x_continuous(trans=log)
ggplot(data=envelopers, aes(enveloped_sizes))+
geom_histogram(binwidth = 5000)+
scale_x_continuous(trans="log")
ggplot(data=envelopers, aes(enveloped_sizes))+
geom_histogram()+
scale_x_continuous(trans="log")
ggplot(data=envelopers, aes(enveloped_sizes))+
geom_histogram(binwidth=5000)+
scale_x_continuous(trans="log")
ggplot(data=envelopers, aes(enveloped_sizes))+
geom_histogram(binwidth=500)+
scale_x_continuous(trans="log")
ggplot(data=envelopers, aes(enveloped_sizes))+
geom_histogram(binwidth=50)+
scale_x_continuous(trans="log")
ggplot(data=envelopers, aes(enveloped_sizes))+
geom_histogram(binwidth=1)+
scale_x_continuous(trans="log")
ggplot(data=envelopers, aes(enveloped_sizes))+
geom_histogram(binwidth=.1)+
scale_x_continuous(trans="log")
ggplot(data=envelopers, aes(enveloped_sizes))+
geom_histogram(binwidth=.1)+
scale_x_continuous(trans="log", limits=c(1,1000000))
ggplot(data=envelopers, aes(enveloped_sizes))+
geom_histogram(binwidth=.1)+
scale_x_continuous(trans="log", limits=c(1000,1000000))
ggplot(data=envelopers, aes(enveloped_sizes))+
geom_histogram(binwidth=.1)+
scale_x_continuous(trans="log", limits=c(1000,1000000), breaks=c(1000,2000,5000,10000,20000,50000,100000,200000,500000,1000000))
ggplot(data=envelopers, aes(enveloped_sizes))+
geom_histogram(binwidth=.05)+
scale_x_continuous(trans="log", limits=c(1000,1000000), breaks=c(1000,2000,5000,10000,20000,50000,100000,200000,500000,1000000))
ggplot(data=envelopers, aes(enveloped_sizes))+
geom_histogram(binwidth=.05)+
scale_x_continuous(trans="log", limits=c(1000,1000000), breaks=c(1000,2000,5000,10000,20000,50000,100000,200000,500000,1000000))+
labs(title="size frequency of enveloped scaffolds", x="size (log scale)")
ggplot(data=envelopers, aes(enveloped_sizes))+
geom_histogram(binwidth=.075)+
scale_x_continuous(trans="log", limits=c(1000,1000000), breaks=c(1000,2000,5000,10000,20000,50000,100000,200000,500000,1000000))+
labs(title="size frequency of enveloped scaffolds", x="size (log scale)")
nrow(envelopers)
ggplot(data=envelopers, aes(enveloped_sizes))+
geom_histogram(binwidth=.09)+
scale_x_continuous(trans="log", limits=c(1000,1000000), breaks=c(1000,2000,5000,10000,20000,50000,100000,200000,500000,1000000))+
labs(title="size frequency of enveloped scaffolds", x="size (log scale)")
ggplot(data=envelopers, aes(enveloped_sizes))+
geom_histogram(binwidth=.1)+
scale_x_continuous(trans="log", limits=c(1000,1000000), breaks=c(1000,2000,5000,10000,20000,50000,100000,200000,500000,1000000))+
labs(title="size frequency of enveloped scaffolds", x="size (log scale)")
setwd("~/Documents/Mallet_Lab/Field Work/Tarapoto_2015/Larval_Viability")
hatch = read.csv(file = "1508017_brood_summaries_early.csv", header = T, sep = ',')
attach(hatch)
plot(Species, HatchRate, ylim=c(0, 100), main = "Hatch Rate", xlab = "Species", ylab = "Percent Hatched")
points(Species, HatchRate)
text(1, 100, labels = "n = 1")
text(2, 100, labels = "n = 7")
text(3, 100, labels = "n = 9")
text(4, 100, labels = "n = 9")
text(5, 100, labels = "n = 2")
View(hatch)
fit <- aov(HatchRate~Species, data=hatch)
fit
summary(fit)
setwd("~/Documents/Mallet_Lab/18Genomes/Genomic_Analysis/ReOrderChroms/ScaffoldingWithDiscovar")
original=read.csv("genomeScafLengths.csv", header=FALSE, col.names = "scaf_sizes")
original=read.csv("genomeScafLengths.csv", header=FALSE, col.names = "scaf_sizes")
ggplot(data=original, aes(scaf_sizes))+
geom_histogram(binwidth=.1)+
scale_x_continuous(trans="log")+
labs(title="size frequency of scaffolds", x="size (log scale)")
ggplot(data=original, aes(scaf_sizes))+
geom_histogram(binwidth=.1, limits=c(1000,10000000))+
scale_x_continuous(trans="log")+
labs(title="size frequency of scaffolds", x="size (log scale)")
ggplot(data=original, aes(scaf_sizes))+
geom_histogram(binwidth=.1)+
scale_x_continuous(trans="log", limits=c(1000,10000000))+
labs(title="size frequency of scaffolds", x="size (log scale)")
ggplot(data=original, aes(scaf_sizes))+
geom_histogram(binwidth=.1)+
scale_x_continuous(trans="log", limits=c(1000,10000000),
breaks=c(1000,2000,5000,10000,20000,50000,100000,200000,500000,1000000,2000000, 5000000, 10000000 ))+
labs(title="size frequency of scaffolds", x="size (log scale)")
ggplot(data=original, aes(scaf_sizes))+
geom_histogram(binwidth=.1)+
scale_x_continuous(trans="log", limits=c(100,10000000),
breaks=c(100,1000,2000,5000,10000,20000,50000,100000,200000,500000,1000000,2000000, 5000000, 10000000 ))+
labs(title="size frequency of scaffolds", x="size (log scale)")
ggplot(data=original, aes(scaf_sizes))+
geom_histogram(binwidth=.1)+
scale_x_continuous(trans="log", limits=c(500,10000000),
breaks=c(500,1000,2000,5000,10000,20000,50000,100000,200000,500000,1000000,2000000, 5000000, 10000000 ))+
labs(title="size frequency of scaffolds", x="size (log scale)")
ggplot(data=original, aes(scaf_sizes))+
geom_histogram(binwidth=.1)+
scale_x_continuous(trans="log", limits=c(200,10000000),
breaks=c(200,1000,2000,5000,10000,20000,50000,100000,200000,500000,1000000,2000000, 5000000, 10000000 ))+
labs(title="size frequency of scaffolds", x="size (log scale)")
ggplot()+
geom_histogram(data=original, aes(scaf_sizes),binwidth=.1)+
scale_x_continuous(trans="log", limits=c(200,10000000),
breaks=c(200,1000,2000,5000,10000,20000,50000,100000,200000,500000,1000000,2000000, 5000000, 10000000 ))+
labs(title="size frequency of scaffolds", x="size (log scale)")
ggplot()+
geom_histogram(data=original, aes(scaf_sizes),binwidth=.1)+
geom_histogram(data=envelopers, aes(enveloped_sizes),binwidth=.1)+
scale_x_continuous(trans="log", limits=c(200,10000000),
breaks=c(200,1000,2000,5000,10000,20000,50000,100000,200000,500000,1000000,2000000, 5000000, 10000000 ))+
labs(title="size frequency of scaffolds", x="size (log scale)")
ggplot()+
geom_histogram(data=original, aes(scaf_sizes),binwidth=.1)+
geom_histogram(data=envelopers, aes(enveloped_sizes),binwidth=.1, color="enveloped")+
scale_x_continuous(trans="log", limits=c(200,10000000),
breaks=c(200,1000,2000,5000,10000,20000,50000,100000,200000,500000,1000000,2000000, 5000000, 10000000 ))+
labs(title="size frequency of scaffolds", x="size (log scale)")
ggplot()+
geom_histogram(data=original, aes(scaf_sizes),binwidth=.1)+
geom_histogram(data=envelopers, aes(enveloped_sizes),binwidth=.1, color="blue")+
scale_x_continuous(trans="log", limits=c(200,10000000),
breaks=c(200,1000,2000,5000,10000,20000,50000,100000,200000,500000,1000000,2000000, 5000000, 10000000 ))+
labs(title="size frequency of scaffolds", x="size (log scale)")
unique=read.csv("uniqueOverlappers.csv", header=FALSE)
View(unique)
ggplot()+
geom_histogram(data=original, aes(scaf_sizes),binwidth=.1)+
geom_histogram(data=unique, aes(V8),binwidth=.1, color="blue")+
scale_x_continuous(trans="log", limits=c(200,10000000),
breaks=c(200,1000,2000,5000,10000,20000,50000,100000,200000,500000,1000000,2000000, 5000000, 10000000 ))+
labs(title="size frequency of scaffolds", x="size (log scale)")
View(unique)
